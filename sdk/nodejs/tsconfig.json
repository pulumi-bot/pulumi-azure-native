{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "cache/index.ts",
        "cache/redis.ts",
        "cache/redisFirewallRule.ts",
        "cache/redisLinkedServer.ts",
        "cache/redisPatchSchedule.ts",
        "cdn/index.ts",
        "cdn/profile.ts",
        "cdn/profileEndpoint.ts",
        "cdn/profileEndpointCustomDomain.ts",
        "cdn/profileEndpointOrigin.ts",
        "cdn/profileEndpointOriginGroup.ts",
        "compute/availabilitySet.ts",
        "compute/image.ts",
        "compute/index.ts",
        "compute/proximityPlacementGroup.ts",
        "compute/virtualMachine.ts",
        "compute/virtualMachineExtension.ts",
        "compute/virtualMachineScaleSet.ts",
        "compute/virtualMachineScaleSetExtension.ts",
        "compute/virtualMachineScaleSetVirtualmachine.ts",
        "containerinstance/containerGroup.ts",
        "containerinstance/index.ts",
        "core/index.ts",
        "core/resourceGroup.ts",
        "index.ts",
        "insights/component.ts",
        "insights/index.ts",
        "network/index.ts",
        "network/networkInterface.ts",
        "network/networkInterfaceTapConfiguration.ts",
        "network/networkSecurityGroup.ts",
        "network/networkSecurityGroupSecurityRule.ts",
        "network/publicIPAddress.ts",
        "network/virtualNetwork.ts",
        "network/virtualNetworkSubnet.ts",
        "network/virtualNetworkVirtualNetworkPeering.ts",
        "provider.ts",
        "resources/deployment.ts",
        "resources/index.ts",
        "sql/index.ts",
        "sql/server.ts",
        "sql/serverDatabase.ts",
        "storage/index.ts",
        "storage/storageAccount.ts",
        "storage/storageAccountBlobServiceContainer.ts",
        "storage/storageAccountBlobServiceContainerImmutabilityPolicy.ts",
        "storage/storageAccountManagementPolicy.ts",
        "storage/storageAccountObjectReplicationPolicy.ts",
        "storage/storageAccountPrivateEndpointConnection.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts",
        "web/appService.ts",
        "web/appServiceDeployment.ts",
        "web/appServiceDomainOwnershipIdentifier.ts",
        "web/appServiceFunction.ts",
        "web/appServiceHostNameBinding.ts",
        "web/appServiceHybridConnectionNamespaceRelay.ts",
        "web/appServiceHybridconnection.ts",
        "web/appServiceNetworkConfig.ts",
        "web/appServicePlan.ts",
        "web/appServicePlanVirtualNetworkConnectionRoute.ts",
        "web/appServicePremieraddon.ts",
        "web/appServicePrivateEndpointConnection.ts",
        "web/appServicePublicCertificate.ts",
        "web/appServiceSiteextension.ts",
        "web/appServiceSlot.ts",
        "web/appServiceSlotDeployment.ts",
        "web/appServiceSlotDomainOwnershipIdentifier.ts",
        "web/appServiceSlotFunction.ts",
        "web/appServiceSlotHostNameBinding.ts",
        "web/appServiceSlotHybridConnectionNamespaceRelay.ts",
        "web/appServiceSlotHybridconnection.ts",
        "web/appServiceSlotNetworkConfig.ts",
        "web/appServiceSlotPremieraddon.ts",
        "web/appServiceSlotPublicCertificate.ts",
        "web/appServiceSlotSiteextension.ts",
        "web/appServiceSlotSourcecontrol.ts",
        "web/appServiceSlotVirtualNetworkConnection.ts",
        "web/appServiceSourcecontrol.ts",
        "web/appServiceVirtualNetworkConnection.ts",
        "web/index.ts",
        "web/staticSite.ts"
    ]
}
