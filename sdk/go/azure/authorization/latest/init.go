// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-native/sdk/go/azure"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-native:authorization/latest:ManagementLockAtResourceGroupLevel":
		r = &ManagementLockAtResourceGroupLevel{}
	case "azure-native:authorization/latest:ManagementLockAtResourceLevel":
		r = &ManagementLockAtResourceLevel{}
	case "azure-native:authorization/latest:ManagementLockAtSubscriptionLevel":
		r = &ManagementLockAtSubscriptionLevel{}
	case "azure-native:authorization/latest:ManagementLockByScope":
		r = &ManagementLockByScope{}
	case "azure-native:authorization/latest:PolicyAssignment":
		r = &PolicyAssignment{}
	case "azure-native:authorization/latest:PolicyDefinition":
		r = &PolicyDefinition{}
	case "azure-native:authorization/latest:PolicyDefinitionAtManagementGroup":
		r = &PolicyDefinitionAtManagementGroup{}
	case "azure-native:authorization/latest:PolicySetDefinition":
		r = &PolicySetDefinition{}
	case "azure-native:authorization/latest:PolicySetDefinitionAtManagementGroup":
		r = &PolicySetDefinitionAtManagementGroup{}
	case "azure-native:authorization/latest:RoleAssignment":
		r = &RoleAssignment{}
	case "azure-native:authorization/latest:RoleDefinition":
		r = &RoleDefinition{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := azure.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"azure-native",
		"authorization/latest",
		&module{version},
	)
}
