// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-native/sdk/go/azure"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-native:dbforpostgresql/latest:Configuration":
		r = &Configuration{}
	case "azure-native:dbforpostgresql/latest:Database":
		r = &Database{}
	case "azure-native:dbforpostgresql/latest:FirewallRule":
		r = &FirewallRule{}
	case "azure-native:dbforpostgresql/latest:PrivateEndpointConnection":
		r = &PrivateEndpointConnection{}
	case "azure-native:dbforpostgresql/latest:Server":
		r = &Server{}
	case "azure-native:dbforpostgresql/latest:ServerAdministrator":
		r = &ServerAdministrator{}
	case "azure-native:dbforpostgresql/latest:ServerKey":
		r = &ServerKey{}
	case "azure-native:dbforpostgresql/latest:VirtualNetworkRule":
		r = &VirtualNetworkRule{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := azure.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"azure-native",
		"dbforpostgresql/latest",
		&module{version},
	)
}
