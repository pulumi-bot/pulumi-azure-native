# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from .. import _utilities
# Export this package's modules as members:
from ._enums import *
from .extension import *
from .get_extension import *
from .get_source_control_configuration import *
from .source_control_configuration import *
from ._inputs import *
from . import outputs

# Make subpackages available:
v20191101preview = _utilities.lazy_import('pulumi_azure_native.kubernetesconfiguration.v20191101preview')
v20200701preview = _utilities.lazy_import('pulumi_azure_native.kubernetesconfiguration.v20200701preview')
v20201001preview = _utilities.lazy_import('pulumi_azure_native.kubernetesconfiguration.v20201001preview')
v20210301 = _utilities.lazy_import('pulumi_azure_native.kubernetesconfiguration.v20210301')

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "azure-native:kubernetesconfiguration:Extension":
                return Extension(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:kubernetesconfiguration:SourceControlConfiguration":
                return SourceControlConfiguration(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("azure-native", "kubernetesconfiguration", _module_instance)

_register_module()
