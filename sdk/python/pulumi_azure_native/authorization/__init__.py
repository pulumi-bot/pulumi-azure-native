# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from .. import _utilities
# Export this package's modules as members:
from ._enums import *
from .access_review_schedule_definition_by_id import *
from .get_access_review_schedule_definition_by_id import *
from .get_client_config import *
from .get_client_token import *
from .get_management_lock_at_resource_group_level import *
from .get_management_lock_at_resource_level import *
from .get_management_lock_at_subscription_level import *
from .get_management_lock_by_scope import *
from .get_policy_assignment import *
from .get_policy_definition import *
from .get_policy_definition_at_management_group import *
from .get_policy_exemption import *
from .get_policy_set_definition import *
from .get_policy_set_definition_at_management_group import *
from .get_role_assignment import *
from .get_role_definition import *
from .get_role_management_policy_assignment import *
from .management_lock_at_resource_group_level import *
from .management_lock_at_resource_level import *
from .management_lock_at_subscription_level import *
from .management_lock_by_scope import *
from .policy_assignment import *
from .policy_definition import *
from .policy_definition_at_management_group import *
from .policy_exemption import *
from .policy_set_definition import *
from .policy_set_definition_at_management_group import *
from .role_assignment import *
from .role_definition import *
from .role_management_policy_assignment import *
from ._inputs import *
from . import outputs

# Make subpackages available:
v20150101 = _utilities.lazy_import('pulumi_azure_native.authorization.v20150101')
v20150701 = _utilities.lazy_import('pulumi_azure_native.authorization.v20150701')
v20151001preview = _utilities.lazy_import('pulumi_azure_native.authorization.v20151001preview')
v20160401 = _utilities.lazy_import('pulumi_azure_native.authorization.v20160401')
v20160901 = _utilities.lazy_import('pulumi_azure_native.authorization.v20160901')
v20161201 = _utilities.lazy_import('pulumi_azure_native.authorization.v20161201')
v20170601preview = _utilities.lazy_import('pulumi_azure_native.authorization.v20170601preview')
v20171001preview = _utilities.lazy_import('pulumi_azure_native.authorization.v20171001preview')
v20180101preview = _utilities.lazy_import('pulumi_azure_native.authorization.v20180101preview')
v20180301 = _utilities.lazy_import('pulumi_azure_native.authorization.v20180301')
v20180501 = _utilities.lazy_import('pulumi_azure_native.authorization.v20180501')
v20180501preview = _utilities.lazy_import('pulumi_azure_native.authorization.v20180501preview')
v20180901preview = _utilities.lazy_import('pulumi_azure_native.authorization.v20180901preview')
v20190101 = _utilities.lazy_import('pulumi_azure_native.authorization.v20190101')
v20190601 = _utilities.lazy_import('pulumi_azure_native.authorization.v20190601')
v20190901 = _utilities.lazy_import('pulumi_azure_native.authorization.v20190901')
v20200301 = _utilities.lazy_import('pulumi_azure_native.authorization.v20200301')
v20200301preview = _utilities.lazy_import('pulumi_azure_native.authorization.v20200301preview')
v20200401preview = _utilities.lazy_import('pulumi_azure_native.authorization.v20200401preview')
v20200701preview = _utilities.lazy_import('pulumi_azure_native.authorization.v20200701preview')
v20200801preview = _utilities.lazy_import('pulumi_azure_native.authorization.v20200801preview')
v20200901 = _utilities.lazy_import('pulumi_azure_native.authorization.v20200901')
v20201001preview = _utilities.lazy_import('pulumi_azure_native.authorization.v20201001preview')
v20210301preview = _utilities.lazy_import('pulumi_azure_native.authorization.v20210301preview')

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "azure-native:authorization:AccessReviewScheduleDefinitionById":
                return AccessReviewScheduleDefinitionById(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:authorization:ManagementLockAtResourceGroupLevel":
                return ManagementLockAtResourceGroupLevel(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:authorization:ManagementLockAtResourceLevel":
                return ManagementLockAtResourceLevel(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:authorization:ManagementLockAtSubscriptionLevel":
                return ManagementLockAtSubscriptionLevel(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:authorization:ManagementLockByScope":
                return ManagementLockByScope(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:authorization:PolicyAssignment":
                return PolicyAssignment(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:authorization:PolicyDefinition":
                return PolicyDefinition(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:authorization:PolicyDefinitionAtManagementGroup":
                return PolicyDefinitionAtManagementGroup(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:authorization:PolicyExemption":
                return PolicyExemption(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:authorization:PolicySetDefinition":
                return PolicySetDefinition(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:authorization:PolicySetDefinitionAtManagementGroup":
                return PolicySetDefinitionAtManagementGroup(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:authorization:RoleAssignment":
                return RoleAssignment(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:authorization:RoleDefinition":
                return RoleDefinition(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure-native:authorization:RoleManagementPolicyAssignment":
                return RoleManagementPolicyAssignment(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("azure-native", "authorization", _module_instance)

_register_module()
